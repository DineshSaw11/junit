spring.application.name=junit

# = DATABASE CONNECTION CONFIGS =
# ===============================
spring.datasource.url=jdbc:mysql://localhost:3308/mytest
spring.datasource.username=root
spring.datasource.password=pass123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================
# = JPA / HIBERNATE CONFIGS     =
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


#------junit-----------------
#
#1.spring boot 1 t0 2 has implicity junit4 we can add just junit4 depedency if we want a explicity version.
#
#2.spring boot 2 and above support junit 5 impicitly, we can add \
#  \
# explicitly version, here junit-jupiter-api has api like @Test,@AfterAll,@BeforeAll etc.\
# junit-engine execute the test when call by  maven-surefire-plugin.
#
#3. we can add AssertJ for better assertion funtions and chaining of function facilities.
#
#4. we can also add param dependency for parameterized test cases.
#
#5. if we want to run junit5, and junit 4 both test cases then we can include
#junit-jupiter-api,junit-engine,junit-vintage-engine,junit and maven-surefire-plugin
#here junit will insure explicity version of junit 4 and junit-vintage-engine to run junit 4


#mockito

#there are two types of mocking framework
#
#1. stub based mock framework(e.g:-easy mock and jmock):- it uses proxy
#->final class and method cannot be mocked.
#->private method can not be mocked.
#
#2.Bytecode manipulation Based Mock Framework(e.g:-power mock and mockito):- it create dynamic classes at
#runtime

#power mock is only up to junit 4 so use mockito for junit5
